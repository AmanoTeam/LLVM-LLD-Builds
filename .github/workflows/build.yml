name: Build

on:
  push:
    branches:
        - '**'

jobs:
  cross-build:
    name: 'Cross build'
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        target: [
          # 'alpha-unknown-linux-gnu',
          'x86_64-unknown-linux-gnu2.7',
          'i386-unknown-linux-gnu2.7',
          # 'arm-unknown-linux-gnueabi',
          'arm-unknown-linux-gnueabihf',
          # 'hppa-unknown-linux-gnu',
          'aarch64-unknown-linux-gnu',
          # 'mips-unknown-linux-gnu',
          # 'mipsel-unknown-linux-gnu',
          'powerpc-unknown-linux-gnu2.17',
          # 's390-unknown-linux-gnu',
          's390x-unknown-linux-gnu',
          'sparc-unknown-linux-gnu2.17',
          'powerpc64le-unknown-linux-gnu'
        ]
    steps:
    - uses: actions/checkout@main
      with:
        submodules: true
    - name: Install Clang 20
      run: |
        wget 'https://apt.llvm.org/llvm.sh'
        sudo bash './llvm.sh' '20'
        
        for old in '/usr/bin/'*'-20'; do
            declare new="$(sed 's/-20//g' <<< "${old}")"
            sudo unlink "${new}" 2>/dev/null || true
            sudo ln --symbolic "${old}" "${new}"
        done
    - name: Build LLVM LLD with OBGGCC
      run: |
        source './submodules/obggcc/tools/setup_toolchain.sh'
        bash './build.sh' '${{ matrix.target }}'
    - name: Create logs
      if: always()
      run: |
        declare logs=''
        
        while read file; do
            logs+="${file} "
        done <<< $(find '/tmp/'*'/build' -wholename '*.log' -o -wholename '*.yaml')
        
        tar --create --file=- ${logs} | xz --threads='0' --compress -9 > '/tmp/logs.tar.xz'
    - name: Upload logs
      if:  always()
      uses: actions/upload-artifact@main
      with:
        name: ${{ matrix.target }}-logs
        if-no-files-found: error
        path: |
            /tmp/logs.tar.xz
    - name: Generate tarball
      run: |
        declare -r target='${{ matrix.target }}'
        declare -r triplet="${target%2.*}"
        
        echo "TRIPLET=${triplet}" >> "${GITHUB_ENV}"
        
        declare tarball_filename="/tmp/${triplet}.tar.xz"
        tar --directory='/tmp' --create --file=- 'llvm-ld' | xz --threads='0' --compress -9 > "${tarball_filename}"
        sha256sum "${tarball_filename}" | sed 's|/tmp/||' > "${tarball_filename}.sha256"
    - name: Upload artifact
      uses: actions/upload-artifact@main
      with:
        name: ${{ matrix.target }}
        if-no-files-found: error
        path: |
          /tmp/${{ env.TRIPLET }}.tar.xz
          /tmp/${{ env.TRIPLET }}.tar.xz.sha256

